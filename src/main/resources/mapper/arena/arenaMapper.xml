<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="arenaDao">

	
	<select id="searchArena" parameterType="com.java.main.bo.ArenaInfoBo" resultType="com.java.main.bo.ArenaInfoBo">
	<![CDATA[ /* [arenaDao.xml] searchArena */ ]]>
		
	    select 
	    	deck_no as deckNo,
			of_1_character_id,
			of_1_star,
			of_2_character_id,
			of_2_star,
			of_3_character_id,
			of_3_star,
			of_4_character_id,
			of_4_star,
			of_5_character_id,
			of_5_star,
			ifnull(reg_nick, '없음') as regNick,
			date_format(reg_date, '%Y/%m/%d') as regDate
		from arena_info
			where 1=1
			and df_1_character_id = #{df_1_character_id}
			and df_2_character_id = #{df_2_character_id}
			and df_3_character_id = #{df_3_character_id}
			and df_4_character_id = #{df_4_character_id}
			and df_5_character_id = #{df_5_character_id}
		order by reg_date desc
	</select>
	
	<select id="searchArenaAdmin" parameterType="com.java.main.bo.ArenaInfoBo" resultType="com.java.main.bo.ArenaInfoBo">
	<![CDATA[ /* [arenaDao.xml] searchArenaAdmin */ ]]>
		
	    select 
	    	deck_no as deckNo,
			(select character_name from character_info where character_id = of_1_character_id) as of_1_character_id,
			(select character_name from character_info where character_id = of_2_character_id) as of_2_character_id,
			(select character_name from character_info where character_id = of_3_character_id) as of_3_character_id,
			(select character_name from character_info where character_id = of_4_character_id) as of_4_character_id,
          	(select character_name from character_info where character_id = of_5_character_id) as of_5_character_id,
			ifnull(reg_nick, '없음') as regNick,
			date_format(reg_date, '%Y/%m/%d') as regDate
		from arena_info
			where 1=1
			and df_1_character_id = #{df_1_character_id}
			and df_2_character_id = #{df_2_character_id}
			and df_3_character_id = #{df_3_character_id}
			and df_4_character_id = #{df_4_character_id}
			and df_5_character_id = #{df_5_character_id}
		order by reg_date desc
	</select>
	
	<select id="duplicateCheck" parameterType="com.java.main.bo.ArenaInfoBo" resultType="com.java.main.bo.ArenaInfoBo">
	<![CDATA[ /* [arenaDao.xml] duplicateCheck */ ]]>
		
		select
			count(1) as cnt
		from arena_info
		where 1=1
			and df_1_character_id = #{df_1_character_id}
			and df_2_character_id = #{df_2_character_id}
			and df_3_character_id = #{df_3_character_id}
			and df_4_character_id = #{df_4_character_id}
			and df_5_character_id = #{df_5_character_id}
			and of_1_character_id = #{of_1_character_id}
			and of_2_character_id = #{of_2_character_id}
			and of_3_character_id = #{of_3_character_id}
			and of_4_character_id = #{of_4_character_id}
			and of_5_character_id = #{of_5_character_id}
	</select>
	
	<insert id="insertArenaInfo" parameterType="com.java.main.bo.ArenaInfoBo">
	<![CDATA[ /* [arenaDao.xml] insertArenaInfo */ ]]>
	insert into arena_info
	(
	df_1_character_id,
	df_2_character_id,
	df_3_character_id,
	df_4_character_id,
	df_5_character_id,
	
	of_1_character_id,
	of_2_character_id,
	of_3_character_id,
	of_4_character_id,
	of_5_character_id,
	<if test="regNick != null and regNick != '' ">
	reg_nick,
	</if>
	reg_date
		
	) values 
	(
	#{df_1_character_id},
	#{df_2_character_id},
	#{df_3_character_id},
	#{df_4_character_id},
	#{df_5_character_id},
	
	#{of_1_character_id},
	#{of_2_character_id},
	#{of_3_character_id},
	#{of_4_character_id},
	#{of_5_character_id},
	<if test="regNick != null and regNick != '' ">
	#{regNick},
	</if>
	NOW()
	)
	
	</insert>
	
	<delete id="deleteArenaInfo"  parameterType="com.java.main.bo.ArenaInfoBo">
		<![CDATA[ /* [arenaDao.xml] deleteArenaInfo */ ]]>
	delete from arena_info
	where deck_no = #{deckNo}
	
	</delete>

</mapper>
